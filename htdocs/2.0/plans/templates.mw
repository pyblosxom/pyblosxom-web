= Flavour/Template improvements =

Author: Will Guaraldi

Originally published: October 31, 2007


= Summary =

This document covers new features and refactoring for the flavour/template system.

The document also doubles as a specification for how the flavour/template system works.


= Flavours and templates =

The flavour/template system comes from Blosxom [#id2 [1]]. Much of the functionality is mirrored with some additional bits that are unique to PyBlosxom.

A flavour is a group of templates that when pieced together with content produce the output for a response. For example, the ''html'' flavour is a group of templates which create an HTML document; the ''atom'' flavour is a group of templates which create an Atom document; the ''RSS'' flavour is a group of templates which create an RSS document; ...

A template is a single component of a flavour.

A typical flavour consists of at least the following templates:

* ''content_type'' - Defines the Content-Type of the document.
* ''head'' - The head of the document--comes before all the stories.
* ''story'' - This template is repeated for each entry.
* ''foot'' - The foot of the document--comes after all the stories.

PyBlosxom also has:

* ''date_head'' - This comes before a group of entries written on the same day.
* ''date_foot'' - This comes after a group of entries written on the same day.

An example page could be laid out as such:

 
 head            &lt;html&gt;
                 &lt;head&gt;
                    &lt;title&gt;My blog&lt;/title&gt;
                 &lt;/head&gt;
                 &lt;body&gt;
                    &lt;h1&gt;My blog&lt;/h1&gt;
                    &lt;p&gt;
                       ... a study in examples.
                    &lt;/p&gt;
 
 date_head          &lt;h2&gt;September 8, 2007&lt;/h2&gt;
 
 story 3            &lt;h3&gt;Blunt my pencil is from blogging&lt;/h3&gt;
                    &lt;p&gt;
                       Lo, it hath been 2 minutes since my last blog
                       entry and my pencil (a.k.a. fingers) doth itch
                       to write more!
                    &lt;/p&gt;
                    &lt;p&gt;
                       posted at: 15:04 | /mylife
                    &lt;/p&gt;
 
 story 2            &lt;h3&gt;Lorem ipsum story 2&lt;/h3&gt;
                    &lt;p&gt;
                       Forsooth I did write this here blog entry
                       in my &lt;i&gt;mylife&lt;/i&gt; category and it filled my
                       tummy with joy.
                    &lt;/p&gt;
                    &lt;p&gt;
                       posted at: 15:02 | /mylife
                    &lt;/p&gt;
 
 date_foot          &lt;hr noshade&gt;
 
 date_head          &lt;h2&gt;September 7, 2007&lt;/h2&gt;
 
 story 3            &lt;h3&gt;Look ma!  My first post!&lt;/h3&gt;
                    &lt;p&gt;
                       Despite the difficulties in setting such a thing
                       up, I have succeeded in the face of danger!  My
                       blog is running and this is my first post!
                    &lt;/p&gt;
                    &lt;p&gt;
                       posted at: 18:28 | /myblog
                    &lt;/p&gt;
 
 date_foot          &lt;hr noshade&gt;
 
 foot               &lt;p&gt;
                       This blog is licensed under a ridiculous license
                       that only allows people who are between 15 and 19
                       years of age to read it.  Take that old people!
                    &lt;/p&gt;
                 &lt;/body&gt;
                 &lt;/html&gt;


= Variables =

Inside the template is a bunch of text and a series of variables that are expanded when the template is used. Variables start with a dollar sign (<tt>$</tt>) followed by the name of the variable. For example, the variable for title would be:

 
 $title

Variables can be delimited by parentheses:

 
 $(title)

Variables can be "scoped":

 
 $foo::bar                           $(foo::bar)

Variables can be function calls:

 
 $foo()                              $(foo())
 $foo(bar)                           $(foo(bar))
 $foo(1, 2, 3, "a", "b", "c")        $(foo(1, 2, 3, "a", "b", "c"))

Variables can be escaped:

 
 $escape(title)                      $(escape(title))

Escaping converts single quotes into <tt>&amp;apos;</tt> and double quotes to <tt>&amp;quot;</tt> .

Variables can be urlencoded:

 
 $urlencode(title)                   $(urlencode(title))

Urlencoding calls Python's <tt>urllib.quote</tt> function which:

<blockquote>

"replaces special characters in '''string''' using the <tt>%xx</tt> escape. Letters, digits, and the characters <tt>_</tt> and <tt>-</tt> are never quoted."

From http://docs.python.org/lib/module-urllib.html

 </blockquote>

Note

Prior to 2.0, escaping was done by tacking on <tt>_escaped</tt> to the end of the variable name. For example:

 
 $title_escaped

Urlencoding was done by tacking on <tt>_urlencoded</tt> to the end of the variable name. For example:

 
 $title_urlencoded

These forms have been deprecated.


= Flavour discovery =

FIXME - talk about how flavours can be stored on the file system


= Flavour specification =

FIXME - talk about how PyBlosxom figures out which flavour to use to render with


= Footnotes =

{| id="id2" class="docutils footnote" frame="void" rules="none" frame="void" rules="none"
| class="label" |
[#id1 [1]]
|
Blosxom - http://www.blosxom.com/
|}


= Discussion =

Discussion of this proposal is at:

gmane.org (FIXME - fill in URL here)
