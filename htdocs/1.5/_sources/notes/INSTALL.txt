====================
Installing PyBlosxom
====================

This guide walks through how to install PyBlosxom.

If this file doesn't meet your needs, ask us on the pyblosxom-users
mailing list or on IRC.  Information on both is on the website_.

.. _website: http://pyblosxom.bluesock.org/

.. Note::

   If you're testing PyBlosxom, use ``virtualenv`` and deploy with
   Paste.  It'll save you a lot of time and it's easy to clean up
   afterwards.

.. Note::

   If you're upgrading from a previous version, make sure to read
   the Changelog.


Requirements
============

Minimally, PyBlosxom requires Python 2.3 to install.

PyBlosxom is well supported on GNU/Linux, works well on Mac OS X,
and might work on Windows.

PyBlosxom works with any web-server as a CGI application, works as a
WSGI application, and might work in other contexts.


Installation
============

.. Note::

   If you plan to install PyBlosxom to hack on it, see the section on
   Installing PyBlosxom to hack on it.


Installing with distribute and pip
----------------------------------

If you have `distribute`_ and `pip`_ installed and want to do a
site-wide installation, do::

   pip install pyblosxom

.. _distribute: http://pypi.python.org/pypi/distribute
.. _pip: http://pypi.python.org/pypi/pip


Installing with setuptools and easy_install
-------------------------------------------

If you have `setuptools`_ installed and want to do a site-wide
installation, do::

   easy_install pyblosxom

.. _setuptools: http://pypi.python.org/pypi/setuptools


Creating a blog
===============

To create a blog, do::

   pyblosxom-cmd create ./blog/

That generates the directory structure, required files, and a first
post in the ``./blog/`` directory.


Deploying
=========

We use the word "deploy" to cover the steps and setup required to turn
your blog into a web-site.  This could be any of the following:

1. static rendering where your blog is compiled into a set of HTML pages
2. running your blog as a CGI program
3. running your blog as a WSGI application
4. some fourth thing!

The PyBlosxom documentation covers some of these deployment options.
If you want to deploy your blog in a way that's not covered in the
documentation, ask on the pyblosxom-users mailing list or on IRC.


Post-install
============

After you finish installing PyBlosxom, you should sign up on the
*pyblosxom-users* `mailing list`__.

__ https://lists.sourceforge.net/lists/listinfo/pyblosxom-users

Additionally, please hop on the ``#pyblosxom`` IRC channel on
``irc.freenode.net`` and say hi.  It'll almost certainly help you get
acquainted with PyBlosxom and it'll reduce the amount of time it takes
to get your blog up and going.


Installing PyBlosxom to hack on it
==================================

Installing PyBlosxom to hack on it is a little different since you:

1. want to be running PyBlosxom from a git clone

2. probably need a virtual environment to separate PyBlosxom things
   from the rest of your environment


To do that, we're going to use `virtualenv`_ and `paster`_.

.. _virtualenv: http://pypi.python.org/pypi/virtualenv
.. _paster: http://pypi.python.org/pypi/PasteScript


1. Install virtualenv::

      easy_install virtualenv

   OR::

      pip install virtualenv

2. Build a virtual environment in the directory specified by
   ``VEDIR``::

      virtualenv --no-site-packages VEDIR

   For example, if you want to create a virtual environment in 
   ``~/pyblosxom_dev/venv/``, you'd do::

      virtualenv --no-site-packages ~/pyblosxom_dev/venv/

3. Activate your virtual environment::

      source VEDIR/bin/activate

4. Install paste into your virtual environment::

      easy_install paste_deploy

   OR::

      pip install paste_deploy


4. Using git, clone the PyBlosxom repository::

      git clone git://gitorious.org/pyblosxom/pyblosxom.git pyblosxom

   .. Note::

      If you have a gitorious account, you can clone it to your
      account.  That makes it easier to send us merge requests.

      If you don't have a gitorious account, you can still clone the 
      repository, but you can't send us merge requests as easily.
      Instead, you'll have to send us patches.

5. Change directories into the ``pyblosxom`` directory and run::

      python setup.py develop

6. Then you can create a blog into the directory specified by
   ``BLOGDIR``::

      pyblosxom-cmd create BLOGDIR

   For example, if you wanted to create your blog in
   ``~/blog/``, you'd do::

      pyblosxom-cmd create ~/blog/

That's all you have to do for set up.  You now have a new virtual
environment, Paste and PyBlosxom installed in the virtual environment,
and you have a fresh blog set up.


When you want to run PyBlosxom from your git clone in your virtual
environment, you will:

1. Make sure the virtual environment is activated and if it isn't
   do::

      source VEDIR/bin/activate

2. Change directories into where you have your blog and do::

      paster serve blog.ini      


Because you installed PyBlosxom with ``python setup.py develop``, when
you make changes to the PyBlosxom code, they'll be available in the
environment--you don't need to re-run ``python setup.py develop``.



